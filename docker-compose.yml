version: "3"
services:
  githubarchive:
    container_name: githubarchive
    build:
      context: githubArchive/
      dockerfile: Dockerfile
    volumes:
      - ./src:/data
  commit-simulator:
    container_name: commit-simulator
    build:
      context: commit-simulator
      dockerfile: Dockerfile
    tty: true
    environment:
      multiplier: 0
  git-api:
    container_name: github-api
    build:
      context: ./git-api
      dockerfile: Dockerfile
    ports:
      - 80:80
    environment:
      FLASK_APP: server.py
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
    volumes:
      - ./src:/data
    tty: true
  frontend:
    container_name: front
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 81:80
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 15672:15672
    volumes:
      - ./rabbitManagement/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
      - ./rabbitManagement/definitions.json:/etc/rabbitmq/definitions.json:ro
  broker-consumer:
    container_name: broker-consumer
    build:
      context: githubArchive/
      dockerfile: DockerfileConsumer
    volumes:
      - ./githubArchive/src:/data
  datastorage:
    container_name: datastorage
    build:
      context: .
      dockerfile: ./datastorage/Dockerfile
    ports:
      - 27017:27017
      - 27018:27018
      - 27019:27019
    volumes:
      - ./datastorage/share:/tmp/share
      - mongo-storage:/data/db
  elasticsearch:
    container_name: search
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.2
    environment:
      - "ES_JAVA_OPTIONS=-Xms1g -Xmx1g"
    ports:
      - 9200:9200
    volumes:
      - elasticsearch:/data/db
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana-oss:6.2.2
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_URL=http://search:9200
  #volumes:
  #  - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    tty: true
  neo4j:
    container_name: recommandation
    build:
      context: .
      dockerfile: ./recommandation/Dockerfile
    environment:
      - NEO4J_AUTH=none
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - ./share:/tmp/share
      - ./dbs/neo4j/data:/data
      - ./recommandation/plugins:/var/lib/neo4j/plugins
    tty: true
#  jupyter-python-spark:
#    container_name: jupyter
#    build:
#      context: .
#      dockerfile: ./prediction/Dockerfile
#    container_name: prediction
#    ports:
#      - 8889:8889
#      - 4040:4040
#    volumes:
#      - ./prediction/data:/home/jovyan/data
#    tty: true
volumes:
  mongo-storage:
  elasticsearch:
